.select {
	position: relative;
	width: fit-content;
	height: fit-content;

	&:not(:has(> .options:popover-open)) > .current > .arrow-opened,
	&:has(> .options:popover-open) > .current > .arrow-closed { display: none; }
}
.current {
	display: flex;
	flex-wrap: nowrap;
	overflow: hidden;
	
	padding: .25em;
	padding-inline-start: 1em;
	user-select: none;
	background-color: var(--theme-bg-0);
	border: var(--theme-border-width) solid var(--theme-bd-0);
	border-radius: var(--theme-border-radius);

	min-width: 2.5em;

	&.icon {
		padding-inline-start: .5em;
		& > :first-child {
			display: block;
			align-self: center;
		}
		& > .label:not(:empty) {
			margin-inline-start: .25em;
		}
	}
	&.icon > :first-child,
	& > .arrow {
		display: block;
		align-self: center;
	}
}
.options {
	flex-direction: column;
	min-width: 7.5em;
	width: max-content;
	height: fit-content;
	overflow: visible;

	background-color: var(--theme-bg-0);
	color: var(--theme-fg-0);
	border: var(--theme-border-width) solid var(--theme-bd-0);

	border-radius: var(--theme-border-radius);

	:not(.nowrap) > & {
		flex-wrap: wrap;
		max-height: 20em;
	}
	&:popover-open {
		display: flex;
	}
}

@supports (position-anchor: auto) {
	.options {
		position: absolute;

		inset: auto;
		inset-block-start: calc(anchor(end) - var(--theme-border-width));
		inset-inline-start: anchor(start);
		position-try-fallbacks: 
			flip-inline,
			flip-block,
			flip-inline flip-block
		;
	}
}
@supports not (position-anchor: auto) {
	.options {
		position: absolute;
		top: 100%;
	}
}

.section {
	display: flex;
	flex-direction: column;
	flex-wrap: nowrap;
	max-width: 20em;
	gap: 0.25em;

	margin-inline: .5em;
	padding-block: .25em;
	margin-block-end: .25em;

	& > .label {
		display: flex;
		flex-direction: row;
		gap: 0.25rem;

		user-select: none;
		opacity: 0.5;
		font-size: 0.75em;
		padding-inline-start: 0.25rem;
	}

	&:has(+ .option) {
		border-block-end: var(--theme-border-width) solid var(--theme-bd-0);
	}
	&:has(+ .section) {
		margin-block-end: 0;
	}
}
.option {
	display: flex;
	flex-direction: row;
	place-items: center;
	gap: 0.25em;

	padding-block: .25em;
	padding-inline-start: .75em;
	padding-inline-end: 1em;
	
	user-select: none;
	border-radius: var(--theme-border-radius);
	list-style: none;
	min-height: 1.75rem;


	:is(.section > menu, .options):has(> .icon) > &:not(.icon) {
		padding-inline-start: 2em;
	}
	.options > & {
		/* Remove border radius on unsectioned options */
		/* ...But add it back for the last child */
		border-top-left-radius: 0;
		border-top-right-radius: 0;
		&:not(:last-child) {
			border-radius: 0;
		}
	}
	&.icon {
		padding-inline-start: .25em;
	}
	&.selected {
		background-color: var(--theme-primary-bg-1);
		color: var(--theme-primary-fg-1);
	}
	&:hover, &:focus-visible {
		background-color: var(--theme-primary-bg-0);
		color: var(--theme-primary-fg-0);
	}
	&:focus-visible {
		z-index: 2;
	}
	& > .label {
		line-height: 1.25;
		vertical-align: middle;
	}
}