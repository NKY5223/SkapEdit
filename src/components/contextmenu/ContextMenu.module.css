@layer component {

.context-menu {
}

.anchor {
	anchor-name: --contextmenu-anchor;
}
.floating-anchor {
	position: fixed;
	z-index: 99999;

	--x: 0px;
	--y: 0px;
	
	left: var(--x);
	top: var(--y);
	anchor-name: --contextmenu-anchor;

	width: 0;
	height: 0;
}

@supports (position-anchor: auto) {
	.context-menu {
		position: fixed;
		inset: unset;

		position-try-fallbacks: 
			flip-inline,
			flip-block,
			flip-inline flip-block
		;

		&:not(.anchored.root) {
			position-anchor: --contextmenu-anchor;
		}

		&.floating {
			inset-inline-start: anchor(end);
			inset-block-start: anchor(start);
		}

		&.anchored {
			inset-inline-start: calc(anchor(end) + var(--anchor-offset-x, 0px));
			inset-block-start: calc(anchor(start) + var(--anchor-offset-y, 0px));
		}

		.submenu > &.anchored {
			--anchor-offset-x: calc(0.5em + var(--theme-border-width));
			--anchor-offset-y: calc(-0.5em - var(--theme-border-width));
		}
		.anchor-bottom > &.anchored {
			inset-inline-start: calc(anchor(start) + var(--anchor-offset-x, 0px));
			inset-block-start: calc(anchor(end) + var(--anchor-offset-y, 0px));
		}
	}
}
@supports not (position-anchor: auto) {
	.context-menu.anchored {
		position: absolute;
		left: 100%;
		top: calc(-1 * var(--cmenu-bwidth));
	}
	.context-menu.floating {
		position: relative;
	}
}

/* #region items */

.contextmenu-anchor {
	position: relative;
	anchor-name: --contextmenu-anchor;
}

.submenu {
	position: relative;
	anchor-name: --contextmenu-anchor;
	padding-inline-end: .5em;
	gap: 0.75em;
	justify-content: space-between;

	/* holy selector spam */
	/* will show context menu when hovered unless another sibling is focused */
	&:not(:not(:has(:focus)) > &:hover, :focus, :focus-within) > .context-menu {
		display: none;
	}

	/* Extend hover range */
	&::before {
		content: "";
		position: absolute;
		inset: 0;
		inset-inline: -0.625em;
	}
}
.submenu-content {
	display: flex;
	gap: 0.5em;
	align-items: center;
}
.submenu-arrow {
	opacity: 0.5;
	justify-self: end;
}

.error {
	width: fit-content;
	min-width: 15em;
	min-height: 20em;
	overflow: auto;
	position: relative;

	border: var(--theme-border-width) solid var(--theme-error-bd);
	resize: both;
}

}